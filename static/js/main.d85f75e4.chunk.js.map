{"version":3,"sources":["components/NewExpense/ExpenseForm.tsx","components/NewExpense/NewExpense.tsx","components/UI/Card.tsx","components/Chart/ChartBar.tsx","components/Chart/Chart.tsx","components/Expenses/ExpensesChart.tsx","components/Expenses/ExpensesFilter.tsx","components/Expenses/ExpenseDate.tsx","components/Expenses/ExpenseItem.tsx","components/Expenses/ExpensesList.tsx","components/Expenses/Expenses.tsx","App.tsx","index.tsx"],"names":["ExpenseForm","props","useState","titleState","setTitleState","amountState","setAmountState","dateState","setDateState","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ChartBar","maxValue","label","barFillHeight","round","style","height","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","year","day","getFullYear","ExpenseItem","ExpensesList","items","length","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","dummy_expenses","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d85f75e4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"src/components/NewExpense/ExpenseForm.css\";\n\nexport default function ExpenseForm(props: any) {\n  const [titleState, setTitleState] = useState(\"\");\n  const [amountState, setAmountState] = useState(\"\");\n  const [dateState, setDateState] = useState(\"\");\n\n  const titleChangeHandler = (event: any) => {\n    setTitleState(event.target.value);\n  };\n  const amountChangeHandler = (event: any) => {\n    setAmountState(event.target.value);\n  };\n  const dateChangeHandler = (event: any) => {\n    setDateState(event.target.value);\n  };\n\n  const submitHandler = (event: any) => {\n    event.preventDefault();\n    const expenseData = {\n      title: titleState,\n      amount: amountState,\n      date: new Date(dateState),\n    };\n    props.onSaveExpenseData(expenseData);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={titleState} onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input type=\"number\" value={amountState} onChange={amountChangeHandler} min=\"0.01\" step=\"0.01\" />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            value={dateState}\n            onChange={dateChangeHandler}\n            min=\"2017-02-15\"\n            max=\"2023-11-26\"\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add expense</button>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\nimport \"src/components/NewExpense/NewExpense.css\";\nimport ExpenseForm from \"src/components/NewExpense/ExpenseForm\";\n\nexport default function NewExpense(props:any) {\n  const onSaveExpenseDataHandler = (enteredExpenseData: any) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData)\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={onSaveExpenseDataHandler} />\n    </div>\n  );\n}\n  ","import React from \"react\";\nimport \"src/components/UI/Card.css\";\n\n\nexport default function Card(props:any){\n    var classes:string = \"card \" + props.className;\n    return(\n        <div className={classes}>{props.children}</div>\n    )\n}","import React from \"react\";\nimport \"src/components/Chart/ChartBar.css\"\n\ninterface Props {\n  value: number;\n  maxValue: number;\n  label: string;\n}\n\nexport default function ChartBar({ value, maxValue, label }: Props) {\n  let barFillHeight = \"0%\";\n\n  if (maxValue> 0) {\n    barFillHeight = Math.round((value / maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{label}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ChartBar from \"src/components/Chart/ChartBar\";\nimport \"src/components/Chart/Chart.css\";\n\nexport default function Chart(props: any) {\n  const dataPointValues = props.dataPoints.map((dataPoint: any) => dataPoint.value);\n  const totalMaximum: number = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint: any) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Chart from \"src/components/Chart/Chart\";\n\nexport default function ExpensesChart(props:any) {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for(const expense of props.expenses ){\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount; \n  }\n\n\n  return <Chart dataPoints={chartDataPoints} />;\n}\n","import React from \"react\";\nimport \"src/components/Expenses/ExpensesFilter.css\";\n\nexport default function ExpensesFilter(props:any) {\n  const dropdownChangeHandler = (event: any) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"src/components/Expenses/ExpenseDate.css\";\n\ninterface Props {\n  date: any;\n}\n\nexport default function ExpenseDate({ date }: Props) {\n  \n  const month: string = date.toLocaleString(\"en-us\", { month: \"long\" });\n  \n  const year: string = date.toLocaleString(\"en-us\", { day: \"2-digit\" });\n \n  const day: string = date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"src/components/Expenses/ExpenseItem.css\";\nimport ExpenseDate from \"src/components/Expenses/ExpenseDate\";\nimport Card from \"src/components/UI/Card\";\n\ninterface Props {\n  title: string;\n  amount: number;\n  date: object;\n}\n\nexport default function ExpenseItem({ title, amount, date }: Props) {\n\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={date} />\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">{amount}</div>\n      </div>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ExpenseItem from \"src/components/Expenses/ExpenseItem\";\nimport \"src/components/Expenses/ExpensesList.css\";\n\ninterface Props{\n  items: any\n}\n\nexport default function ExpensesList({items}:Props) {\n  if (items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {items.map((expense: any) => (\n        <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\n      ))}\n    </ul>\n  );\n}\n","import React, { useState } from \"react\";\nimport Card from \"src/components/UI/Card\";\nimport ExpensesChart from \"src/components/Expenses/ExpensesChart\";\nimport ExpensesFilter from \"src/components/Expenses/ExpensesFilter\";\nimport ExpensesList from \"src/components/Expenses/ExpensesList\";\nimport \"src/components/Expenses/Expenses.css\";\n\ninterface Props{\n  items:any\n}\n\nexport default function Expenses({items}:Props) {\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\n\n  const filterChangeHandler = (selectedYear: any) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = items.filter((expense: any) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n\n       <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses}/>\n     <ExpensesList\n          items={filteredExpenses}\n        />\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport NewExpense from \"src/components/NewExpense/NewExpense\";\nimport Expenses from \"src/components/Expenses/Expenses\";\n\nconst dummy_expenses: object = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nexport default function App() {\n  const [expenses, setExpenses] = useState(dummy_expenses);\n\n  const addExpenseHandler = (expense: object) => {\n    setExpenses((prevExpenses) => {\n      // @ts-ignore\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}